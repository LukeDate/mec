{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Documents/MEC-coding-test/mec/src/components/searchResults.js\";\nimport React, { useState } from 'react';\nimport Search from './search';\nimport Tile from './tile';\nimport styled from 'styled-components';\nimport { inject, observer } from 'mobx-react';\nimport { toJS } from 'mobx';\nconst Results = styled('div')`\n    display: flex;\n    width: 100%;\n    flex-wrap: wrap;\n    height: 100vh;\n    justify-content: space-between;\n`;\n\nconst SearchResults = ({ ...props\n}) => {\n  const [query, setSearchQuery] = useState('');\n  const [results, setSearchResults] = useState([]); // const [imgPath, setImagePath] = useState([]);\n\n  const handleSearch = async () => {\n    await props.searchStore.getSearchData(query); // setImagePath(toJS(props.searchStore.imageData));\n\n    setSearchResults(toJS(props.searchStore.searchData));\n  };\n\n  console.log('results', results);\n  return React.createElement(React.Fragment, null, React.createElement(Search, {\n    setSearchQuery: setSearchQuery,\n    handleSearch: handleSearch,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }), React.createElement(Results, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, React.createElement(Tile, {\n    data: results,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  })));\n};\n\nexport default inject(\"searchStore\")(observer(SearchResults));","map":{"version":3,"sources":["/Users/admin/Documents/MEC-coding-test/mec/src/components/searchResults.js"],"names":["React","useState","Search","Tile","styled","inject","observer","toJS","Results","SearchResults","props","query","setSearchQuery","results","setSearchResults","handleSearch","searchStore","getSearchData","searchData","console","log"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,MAAT,EAAiBC,QAAjB,QAAiC,YAAjC;AACA,SAASC,IAAT,QAAqB,MAArB;AAEA,MAAMC,OAAO,GAAGJ,MAAM,CAAC,KAAD,CAAQ;;;;;;CAA9B;;AAQA,MAAMK,aAAa,GAAG,CAAC,EAAE,GAAGC;AAAL,CAAD,KAAkB;AACpC,QAAM,CAACC,KAAD,EAAQC,cAAR,IAA0BX,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACY,OAAD,EAAUC,gBAAV,IAA8Bb,QAAQ,CAAC,EAAD,CAA5C,CAFoC,CAGpC;;AAEA,QAAMc,YAAY,GAAG,YAAY;AAC7B,UAAML,KAAK,CAACM,WAAN,CAAkBC,aAAlB,CAAgCN,KAAhC,CAAN,CAD6B,CAE7B;;AACAG,IAAAA,gBAAgB,CAACP,IAAI,CAACG,KAAK,CAACM,WAAN,CAAkBE,UAAnB,CAAL,CAAhB;AACH,GAJD;;AAKAC,EAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBP,OAAvB;AACA,SACI,0CACI,oBAAC,MAAD;AAAQ,IAAA,cAAc,EAAED,cAAxB;AAAwC,IAAA,YAAY,EAAEG,YAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAM,IAAA,IAAI,EAAEF,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CAFJ,CADJ;AAQH,CAnBD;;AAqBA,eAAeR,MAAM,CAAC,aAAD,CAAN,CAAsBC,QAAQ,CAACG,aAAD,CAA9B,CAAf","sourcesContent":["import React, { useState } from 'react';\nimport Search from './search';\nimport Tile from './tile';\nimport styled from 'styled-components';\nimport { inject, observer } from 'mobx-react';\nimport { toJS } from 'mobx';\n\nconst Results = styled('div')`\n    display: flex;\n    width: 100%;\n    flex-wrap: wrap;\n    height: 100vh;\n    justify-content: space-between;\n`;\n\nconst SearchResults = ({ ...props }) => {\n    const [query, setSearchQuery] = useState('');\n    const [results, setSearchResults] = useState([])\n    // const [imgPath, setImagePath] = useState([]);\n    \n    const handleSearch = async () => {\n        await props.searchStore.getSearchData(query);\n        // setImagePath(toJS(props.searchStore.imageData));\n        setSearchResults(toJS(props.searchStore.searchData));\n    }\n    console.log('results', results);\n    return (\n        <>\n            <Search setSearchQuery={setSearchQuery} handleSearch={handleSearch}/>\n            <Results>\n                <Tile data={results} />\n            </Results>\n        </>\n    )\n}\n\nexport default inject(\"searchStore\")(observer(SearchResults));\n"]},"metadata":{},"sourceType":"module"}