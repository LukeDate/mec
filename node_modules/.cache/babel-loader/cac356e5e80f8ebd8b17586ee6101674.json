{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Documents/MEC-coding-test/mec/src/components/searchResults.js\";\nimport React, { useState } from 'react';\nimport Search from './search';\nimport styled from 'styled-components';\nimport { inject, observer } from 'mobx-react';\nconst Results = styled('div')`\n\n`;\n\nconst SearchResults = ({ ...props\n}) => {\n  const [query, setSearchQuery] = useState('');\n  const [results, setSearchResults] = useState([]);\n\n  const handleSearch = async () => {\n    await props.searchStore.getSearchData(query);\n    console.log(props.searchStore.data);\n    setSearchResults(props.searchStore.data);\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, console.log(results), React.createElement(Search, {\n    setSearchQuery: setSearchQuery,\n    handleSearch: handleSearch,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }), React.createElement(Results, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }));\n};\n\nexport default inject(\"searchStore\")(observer(SearchResults));","map":{"version":3,"sources":["/Users/admin/Documents/MEC-coding-test/mec/src/components/searchResults.js"],"names":["React","useState","Search","styled","inject","observer","Results","SearchResults","props","query","setSearchQuery","results","setSearchResults","handleSearch","searchStore","getSearchData","console","log","data"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,MAAT,EAAiBC,QAAjB,QAAiC,YAAjC;AAEA,MAAMC,OAAO,GAAGH,MAAM,CAAC,KAAD,CAAQ;;CAA9B;;AAIA,MAAMI,aAAa,GAAG,CAAC,EAAE,GAAGC;AAAL,CAAD,KAAkB;AACpC,QAAM,CAACC,KAAD,EAAQC,cAAR,IAA0BT,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACU,OAAD,EAAUC,gBAAV,IAA8BX,QAAQ,CAAC,EAAD,CAA5C;;AAEA,QAAMY,YAAY,GAAG,YAAY;AAC7B,UAAML,KAAK,CAACM,WAAN,CAAkBC,aAAlB,CAAgCN,KAAhC,CAAN;AACAO,IAAAA,OAAO,CAACC,GAAR,CAAYT,KAAK,CAACM,WAAN,CAAkBI,IAA9B;AACAN,IAAAA,gBAAgB,CAACJ,KAAK,CAACM,WAAN,CAAkBI,IAAnB,CAAhB;AACH,GAJD;;AAMA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKF,OAAO,CAACC,GAAR,CAAYN,OAAZ,CADL,EAEI,oBAAC,MAAD;AAAQ,IAAA,cAAc,EAAED,cAAxB;AAAwC,IAAA,YAAY,EAAEG,YAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,EAGI,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHJ,CADJ;AAOH,CAjBD;;AAmBA,eAAeT,MAAM,CAAC,aAAD,CAAN,CAAsBC,QAAQ,CAACE,aAAD,CAA9B,CAAf","sourcesContent":["import React, { useState } from 'react';\nimport Search from './search';\nimport styled from 'styled-components';\nimport { inject, observer } from 'mobx-react';\n\nconst Results = styled('div')`\n\n`;\n\nconst SearchResults = ({ ...props }) => {\n    const [query, setSearchQuery] = useState('');\n    const [results, setSearchResults] = useState([])\n    \n    const handleSearch = async () => {\n        await props.searchStore.getSearchData(query);\n        console.log(props.searchStore.data);\n        setSearchResults(props.searchStore.data);\n    }\n\n    return (\n        <div>\n            {console.log(results)}\n            <Search setSearchQuery={setSearchQuery} handleSearch={handleSearch}/>\n            <Results></Results>\n        </div>\n    )\n}\n\nexport default inject(\"searchStore\")(observer(SearchResults));\n"]},"metadata":{},"sourceType":"module"}